# -*- coding: utf-8 -*-
"""Spot Model for Flask .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11rkURUclAhbG6AHPEAC1QU2MSFsuIdwa
"""

from tensorflow.keras.preprocessing.image import ImageDataGenerator
import tensorflow_hub as hub
import tensorflow as tf
import pandas as pd
import numpy as np
from PIL import Image
import os
from sklearn.model_selection import train_test_split
from tensorflow.keras.preprocessing.image import img_to_array, array_to_img
from tensorflow.keras.models import load_model

# Load the saved model
loaded_model = load_model('cancer_detection_model.h5')

def preprocess_image(image_path):
    # Load the image and resize it to (150, 150) to match the model's input shape
    img = Image.open(image_path)
    img = img.resize((150, 150))  # Resize to 150x150
    img_array = np.array(img)     # Convert to NumPy array
    img_array = img_array / 255.0  # Normalize pixel values to [0, 1]
    img_array = np.expand_dims(img_array, axis=0)  # Add a batch dimension
    return img_array

def predict_image(model, image_path):
    # Preprocess the input image
    processed_image = preprocess_image(image_path)

    # Make a prediction using the model
    prediction = loaded_model.predict(processed_image)

    # Since you're doing binary classification, the output will be a probability
    # You can set a threshold (e.g., 0.5) to classify benign (0) or malignant (1)
    if prediction[0] > 0.5:
        return "Malignant"
    else:
        return "Benign"